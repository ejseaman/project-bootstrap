name: on-push # dsx rename

on:
  workflow_dispatch:
  # push:
    # # Publish `$default-branch` as Docker `latest` image.
    # branches:
    #   - $default-branch

    # # Publish `v1.2.3` tags as releases.
    # tags:
    #   - v*

  # Run tests for any PRs.
  pull_request:

env:
  DSXWAT: dsx
  DOCKER_REGISTRY_URL_PREFIX: ghcr.io/${{ github.repository_owner }}
  KUBECONFIG: kube_config.yaml
  DOMAIN: mum.zk.io
jobs:
  infrastructure:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # dsx change this maybe
      matrix:
        folder: [nginx-ingress, cert-manager]
    steps:
      - uses: actions/checkout@v2

      - name: Store kubeconfig for kubectl login
        working-directory: ${{ matrix.folder }}
        run: 'echo "$KUBE_CONFIG" > kube_config.yaml'
        shell: bash
        env:
          KUBE_CONFIG: ${{secrets.KUBE_CONFIG}}

      - name: Build step
        working-directory: ${{ matrix.folder }}
        run: |
          echo ${{ matrix.folder }}: Build
          if [ -f "./build" ]; then
            ./build
          fi

      - name: Deploy step
        working-directory: ${{ matrix.folder }}
        run: |
          echo ${{ matrix.folder }}: Deploy
          if [ -f "./deploy" ]; then
            ./deploy
          fi


  deployments:
    needs: infrastructure
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # dsx change this maybe
      matrix:
        folder: [eg-static-site, eg-redis-server, eg-rest-server, eg-k8s-dashboard, eg-todo-list]
    steps:
      - uses: actions/checkout@v2
      - uses: chrisdickinson/setup-yq@latest

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Store kubeconfig for kubectl login
        working-directory: ${{ matrix.folder }}
        run: 'echo "$KUBE_CONFIG" > kube_config.yaml'
        shell: bash
        env:
          KUBE_CONFIG: ${{secrets.KUBE_CONFIG}}

      # - name: Test kubectl
      #   working-directory: ${{ matrix.folder }}
      #   run: 'kubectl get pods'

      - name: Create k8s imagePullSecrets
        working-directory: ${{ matrix.folder }}
        # --docker-email=dsx@whatdo.dsx
        run: |
          kubectl create secret docker-registry ghcr-docker-mum \
            --docker-server=ghcr.io \
            --docker-username=${{ github.actor }} \
            --docker-password=${{ secrets.READ_PACKAGES_PAT }} \
            --docker-email=anything@something.com \
            --dry-run=client -o yaml \
          | kubectl apply -f -

      - name: Build step
        working-directory: ${{ matrix.folder }}
        run: |
          echo ${{ matrix.folder }}: Build
          if [ -f "./build" ]; then
            ./build
          fi

      - name: Deploy step
        working-directory: ${{ matrix.folder }}
        run: |
          echo ${{ matrix.folder }}: Deploy
          if [ -f "./deploy" ]; then
            ./deploy
          fi
